import numpy as np # linear algebra
import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)

# Input data files are available in the read-only "../input/" directory
# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory

import os
for dirname, _, filenames in os.walk('/kaggle/input'):
    for filename in filenames:
        print(os.path.join(dirname, filename))

# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using "Save & Run All" 
# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session
/kaggle/input/dibetes33hi/diabetes (2).csv
import seaborn as sns
data=pd.read_csv(r"/kaggle/input/dibetes33hi/diabetes (2).csv")
data
Pregnancies	Glucose	BloodPressure	SkinThickness	Insulin	BMI	DiabetesPedigreeFunction	Age	Outcome
0	6	148	72	35	0	33.6	0.627	50	1
1	1	85	66	29	0	26.6	0.351	31	0
2	8	183	64	0	0	23.3	0.672	32	1
3	1	89	66	23	94	28.1	0.167	21	0
4	0	137	40	35	168	43.1	2.288	33	1
...	...	...	...	...	...	...	...	...	...
763	10	101	76	48	180	32.9	0.171	63	0
764	2	122	70	27	0	36.8	0.340	27	0
765	5	121	72	23	112	26.2	0.245	30	0
766	1	126	60	0	0	30.1	0.349	47	1
767	1	93	70	31	0	30.4	0.315	23	0
768 rows × 9 columns

data.shape
(768, 9)
data.isnull().sum()
Pregnancies                 0
Glucose                     0
BloodPressure               0
SkinThickness               0
Insulin                     0
BMI                         0
DiabetesPedigreeFunction    0
Age                         0
Outcome                     0
dtype: int64
data["Outcome"].value_counts()
0    500
1    268
Name: Outcome, dtype: int64
x=data.iloc[:,:-1].values
y=data.iloc[:,-1].values
cols=["#ffa600","#bc5090"]
sns.countplot(x=data["Outcome"],palette= cols)
<AxesSubplot:xlabel='Outcome', ylabel='count'>

Balace the data

from imblearn.over_sampling import SMOTE
s=SMOTE()
x_data,y_data=s.fit_resample(x,y)
from collections import Counter
print(Counter(y_data))
Counter({1: 500, 0: 500})
d=pd.DataFrame(y_data)
d.columns = ['y_data']
d
y_data
0	1
1	0
2	1
3	0
4	1
...	...
995	1
996	1
997	1
998	1
999	1
1000 rows × 1 columns
